CREATE PROCEDURE UP_COPYUSERTEMPLATE(
  TEMPLATENO INTEGER,
  USERNOFROM INTEGER,
  USERNOTO INTEGER,
  NEWDESCRIPTION VARCHAR(80),
  USEDESC CHAR(1))
AS
DECLARE VARIABLE GROUPTYPE CHAR(1);
DECLARE VARIABLE GROUPNO INTEGER;
DECLARE VARIABLE REPORTCATEGORYTYPE INTEGER;
DECLARE VARIABLE REPORTCATEGORYNO INTEGER;
DECLARE VARIABLE NEWTEMPLATENO INTEGER;
DECLARE VARIABLE USERNO INTEGER;
DECLARE VARIABLE MAJORGROUP CHAR(1);
DECLARE VARIABLE MINORGROUP1 CHAR(1);
DECLARE VARIABLE MINORGROUP2 CHAR(1);
DECLARE VARIABLE PARETO_A CHAR(1);
DECLARE VARIABLE PARETO_B CHAR(1);
DECLARE VARIABLE PARETO_C CHAR(1);
DECLARE VARIABLE PARETO_D CHAR(1);
DECLARE VARIABLE PARETO_E CHAR(1);
DECLARE VARIABLE PARETO_F CHAR(1);
DECLARE VARIABLE PARETO_M CHAR(1);
DECLARE VARIABLE CRITICALITY_1 CHAR(1);
DECLARE VARIABLE CRITICALITY_2 CHAR(1);
DECLARE VARIABLE CRITICALITY_3 CHAR(1);
DECLARE VARIABLE CRITICALITY_4 CHAR(1);
DECLARE VARIABLE CRITICALITY_5 CHAR(1);
DECLARE VARIABLE STOCKED CHAR(1);
DECLARE VARIABLE NONSTOCKED CHAR(1);
DECLARE VARIABLE PARETO_X CHAR(1);
DECLARE VARIABLE SUPPLIER CHAR(1);
DECLARE VARIABLE GENERICPARENTS CHAR(1);
DECLARE VARIABLE GENERICCHILDREN CHAR(1);
DECLARE VARIABLE EXCLUDEMAJOR CHAR(1);
DECLARE VARIABLE EXCLUDEMINOR1 CHAR(1);
DECLARE VARIABLE EXCLUDEMINOR2 CHAR(1);
DECLARE VARIABLE EXCLUDESUPPLIER CHAR(1);
DECLARE VARIABLE TEMPLATETYPE CHAR(1);
DECLARE VARIABLE DESCRIPTION VARCHAR(80);
DECLARE VARIABLE REPORTCATEGORIES CHAR(1);
DECLARE VARIABLE SUPERCESSIONTYPE1 CHAR(1);
DECLARE VARIABLE SUPERCESSIONTYPE2 CHAR(1);
DECLARE VARIABLE SUPERCESSIONTYPE3 CHAR(1);
DECLARE VARIABLE SUPERCESSIONTYPE4 CHAR(1);
DECLARE VARIABLE SUPERCESSIONTYPE5 CHAR(1);
DECLARE VARIABLE SUPERCESSIONTYPE6 CHAR(1);
DECLARE VARIABLE SUPERCESSIONTYPE7 CHAR(1);
DECLARE VARIABLE SUPERCESSIONTYPE8 CHAR(1);
DECLARE VARIABLE SUPERCESSIONNONE CHAR(1);
DECLARE VARIABLE SUPERCESSIONPAR CHAR(1);
DECLARE VARIABLE SUPERCESSIONTOP CHAR(1);
DECLARE VARIABLE GENERICNONE CHAR(1);
DECLARE VARIABLE FAMILY CHAR(1);
DECLARE VARIABLE EXCLUDEFAMILY CHAR(1);
DECLARE VARIABLE REVIEW_ABOVE_LIMIT_ORDERS CHAR(1);
DECLARE VARIABLE INCLUDE_ZERO_ORDERS CHAR(1);
DECLARE VARIABLE EXPEDITE CHAR(1);
DECLARE VARIABLE DEEXPEDITE CHAR(1);
DECLARE VARIABLE EXCLUDEREPORTCATEGORY CHAR(1);
DECLARE VARIABLE REPAIRABLE CHAR(1);
DECLARE VARIABLE NONREPAIRABLE CHAR(1);
DECLARE VARIABLE TMPDESC VARCHAR(80);
DECLARE VARIABLE USERFIELD VARCHAR(20);
DECLARE VARIABLE FIELDVALUE VARCHAR(255);
DECLARE VARIABLE CONDITION VARCHAR(20);
begin
/*
  Ver 2.0 : Includes exclude filter for report categories.
  Ver 2.1 : Copy as functionality ... Description as input param
*/
    for select TEMPLATENO, USERNO, DESCRIPTION, TEMPLATETYPE, MAJORGROUP, MINORGROUP1, MINORGROUP2,
    PARETO_A, PARETO_B, PARETO_C, PARETO_D, PARETO_E, PARETO_F, PARETO_M,
    CRITICALITY_1, CRITICALITY_2, CRITICALITY_3, CRITICALITY_4, CRITICALITY_5,
    STOCKED, NONSTOCKED, PARETO_X, SUPPLIER, GENERICPARENTS, GENERICCHILDREN,
    EXCLUDEMAJOR, EXCLUdEMINOR1, EXCLUDEMINOR2, EXCLUDESUPPLIER, REPORTCATEGORIES,
    SUPERCESSIONTYPE1, SUPERCESSIONTYPE2, SUPERCESSIONTYPE3, SUPERCESSIONTYPE4,
    SUPERCESSIONTYPE5, SUPERCESSIONTYPE6, SUPERCESSIONTYPE7, SUPERCESSIONTYPE8,
    SUPERCESSIONNONE, SUPERCESSIONPAR, SUPERCESSIONTOP, GENERICNONE, FAMILY,
    EXCLUDEFAMILY, REVIEW_ABOVE_LIMIT_ORDERS, INCLUDE_ZERO_ORDERS, 
    EXPEDITE, DEEXPEDITE, EXCLUDEREPORTCATEGORY, REPAIRABLE, NONREPAIRABLE
    from TEMPLATE
    where USERNO = :USERNOFROM and TemplateNo=:TemplateNo
    into :TEMPLATENO, :USERNO, :DESCRIPTION, :TEMPLATETYPE, :MAJORGROUP, :MINORGROUP1, :MINORGROUP2,
    :PARETO_A, :PARETO_B, :PARETO_C, :PARETO_D, :PARETO_E, :PARETO_F, :PARETO_M,
    :CRITICALITY_1, :CRITICALITY_2, :CRITICALITY_3, :CRITICALITY_4, :CRITICALITY_5,
    :STOCKED, :NONSTOCKED, :PARETO_X, :SUPPLIER, :GENERICPARENTS, :GENERICCHILDREN,
    :EXCLUDEMAJOR, :EXCLUDEMINOR1, :EXCLUDEMINOR2, :EXCLUDESUPPLIER, :REPORTCATEGORIES,
    :SUPERCESSIONTYPE1, :SUPERCESSIONTYPE2, :SUPERCESSIONTYPE3, :SUPERCESSIONTYPE4,
    :SUPERCESSIONTYPE5, :SUPERCESSIONTYPE6, :SUPERCESSIONTYPE7, :SUPERCESSIONTYPE8,
    :SUPERCESSIONNONE, :SUPERCESSIONPAR, :SUPERCESSIONTOP, :GENERICNONE, :FAMILY,
    :EXCLUDEFAMILY, :REVIEW_ABOVE_LIMIT_ORDERS, :INCLUDE_ZERO_ORDERS,
    :EXPEDITE, :DEEXPEDITE, :EXCLUDEREPORTCATEGORY, :REPAIRABLE, :NONREPAIRABLE
    do begin
        tmpDesc = :DESCRIPTION;
    
      if (UseDesc = 'Y') then
    	tmpDesc = NewDescription;
            
        NEWTEMPLATENO = gen_id(TEMPLATE_SEQNO, 1);
        insert into TEMPLATE  (TEMPLATENO, USERNO, DESCRIPTION, TEMPLATETYPE, MAJORGROUP, MINORGROUP1, MINORGROUP2,
            PARETO_A, PARETO_B, PARETO_C, PARETO_D, PARETO_E, PARETO_F, PARETO_M,
            CRITICALITY_1, CRITICALITY_2, CRITICALITY_3, CRITICALITY_4, CRITICALITY_5,
            STOCKED, NONSTOCKED, PARETO_X, SUPPLIER, GENERICPARENTS, GENERICCHILDREN,
            EXCLUDEMAJOR, EXCLUdEMINOR1, EXCLUDEMINOR2, EXCLUDESUPPLIER, REPORTCATEGORIES,
            SUPERCESSIONTYPE1, SUPERCESSIONTYPE2, SUPERCESSIONTYPE3, SUPERCESSIONTYPE4,
            SUPERCESSIONTYPE5, SUPERCESSIONTYPE6, SUPERCESSIONTYPE7, SUPERCESSIONTYPE8,
            SUPERCESSIONNONE, SUPERCESSIONPAR, SUPERCESSIONTOP, GENERICNONE, FAMILY,
            EXCLUDEFAMILY, REVIEW_ABOVE_LIMIT_ORDERS, INCLUDE_ZERO_ORDERS,
            EXPEDITE, DEEXPEDITE, EXCLUDEREPORTCATEGORY, REPAIRABLE, NONREPAIRABLE)
            values (:NEWTEMPLATENO, :USERNOTO, :tmpDesc, :TEMPLATETYPE, :MAJORGROUP, :MINORGROUP1, :MINORGROUP2,
            :PARETO_A, :PARETO_B, :PARETO_C, :PARETO_D, :PARETO_E, :PARETO_F, :PARETO_M,
            :CRITICALITY_1, :CRITICALITY_2, :CRITICALITY_3, :CRITICALITY_4, :CRITICALITY_5,
            :STOCKED, :NONSTOCKED, :PARETO_X, :SUPPLIER, :GENERICPARENTS, :GENERICCHILDREN,
            :EXCLUDEMAJOR, :EXCLUDEMINOR1, :EXCLUDEMINOR2, :EXCLUDESUPPLIER, :REPORTCATEGORIES,
            :SUPERCESSIONTYPE1, :SUPERCESSIONTYPE2, :SUPERCESSIONTYPE3, :SUPERCESSIONTYPE4,
            :SUPERCESSIONTYPE5, :SUPERCESSIONTYPE6, :SUPERCESSIONTYPE7, :SUPERCESSIONTYPE8,
            :SUPERCESSIONNONE, :SUPERCESSIONPAR, :SUPERCESSIONTOP, :GENERICNONE, :FAMILY,
            :EXCLUDEFAMILY, :REVIEW_ABOVE_LIMIT_ORDERS, :INCLUDE_ZERO_ORDERS,
            :EXPEDITE, :DEEXPEDITE, :EXCLUDEREPORTCATEGORY, :REPAIRABLE, :NONREPAIRABLE);

        for select GROUPTYPE, GROUPNO
            from TMPLT_GROUPS
            WHERE TEMPLATENO = :TEMPLATENO
        into :GROUPTYPE, :GROUPNO
        do begin
            insert into TMPLT_GROUPS (USERNO, TEMPLATENO, GROUPTYPE, GROUPNO)
            values (:USERNOTO, :NEWTEMPLATENO, :GROUPTYPE, :GROUPNO);
        end

        for select REPORTCATEGORYTYPE, REPORTCATEGORYNO
            from TMPLT_REPCATS
            WHERE TEMPLATENO = :TEMPLATENO
        into :reportcategorytype, :reportcategoryno
        do begin
            insert into TMPLT_REPCATS (TEMPLATENO, REPORTCATEGORYTYPE, REPORTCATEGORYNO)
            values (:NEWTEMPLATENO, :REPORTCATEGORYTYPE, :REPORTCATEGORYNO);
        end

        for select CONDITION,FIELDVALUE,USERFIELD
            from TMPLT_USERFIELD_CONDITIONS 
            WHERE TEMPLATENO = :TEMPLATENO
        into :CONDITION,:FIELDVALUE,:USERFIELD
        do begin
          INSERT INTO TMPLT_USERFIELD_CONDITIONS ( TEMPLATENO, USERFIELD, FIELDVALUE, CONDITION ) 
          VALUES ( :NEWTEMPLATENO, :USERFIELD, :FIELDVALUE, :CONDITION );            
        end
    end
end;